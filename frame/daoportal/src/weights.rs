
//! Autogenerated weights for `pallet_daoportal`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-01-28, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/node-template
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_daoportal
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --raw
// --output
// ./frame/daoportal/src/weights.rs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

use crate::datastructures::*;

use sp_std::prelude::*;

pub trait WeightInfo {
    fn register_chain() -> Weight;
	fn update_relayer() -> Weight;
	fn update_vote_fee() -> Weight;
	fn add_project(workspaces: &Vec<Workspace>, ) -> Weight;
	fn update_project_direct(workspaces: &Vec<Workspace>, ) -> Weight;
	fn update_project_relay(workspaces: &Vec<Workspace>, ) -> Weight;
	fn add_proposal_direct(s: u32, ) -> Weight;
	fn add_proposal_relay(s: u32, ) -> Weight;
	fn update_vote(s: u32, ) -> Weight;
}

/// Weight functions for pallet_daoportal.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: DAOPortal LatestChainIndex (r:1 w:1)
	// Storage: DAOPortal Chains (r:0 w:1)
	fn register_chain() -> Weight {
		(25_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: DAOPortal Relayer (r:0 w:1)
	fn update_relayer() -> Weight {
		(20_100_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: DAOPortal VoteFee (r:0 w:1)
	fn update_vote_fee() -> Weight {
		(19_100_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:1)
	// Storage: DAOPortal LatestChainIndex (r:1 w:0)
	// Storage: DAOPortal Chains (r:1 w:0)
	// Storage: DAOPortal Projects (r:0 w:1)
	fn add_project(workspaces: &Vec<Workspace>, ) -> Weight {
		let mut s = 0;
		workspaces.into_iter().map(|w| s += w.strategies.len());
		(55_376_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_487_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal Projects (r:1 w:1)
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: DAOPortal LatestChainIndex (r:1 w:0)
	// Storage: DAOPortal Chains (r:1 w:0)
	fn update_project_direct(workspaces: &Vec<Workspace>, ) -> Weight {
		let mut s = 0;
		workspaces.into_iter().map(|w| s += w.strategies.len());
		(66_699_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_490_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal Projects (r:1 w:1)
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: DAOPortal LatestChainIndex (r:1 w:0)
	// Storage: DAOPortal Chains (r:1 w:0)
	fn update_project_relay(workspaces: &Vec<Workspace>, ) -> Weight {
		let mut s = 0;
		workspaces.into_iter().map(|w| s += w.strategies.len());
		(66_518_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_490_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: DAOPortal VoteFee (r:1 w:0)
	// Storage: System Account (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: DAOPortal LatestProposalId (r:1 w:1)
	// Storage: DAOPortal Proposals (r:0 w:1)
	fn add_proposal_direct(s: u32, ) -> Weight {
		(53_314_000 as Weight)
			// Standard Error: 25_000
			.saturating_add((356_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: DAOPortal LatestProposalId (r:1 w:1)
	// Storage: DAOPortal Proposals (r:0 w:1)
	fn add_proposal_relay(s: u32, ) -> Weight {
		(46_949_000 as Weight)
			// Standard Error: 23_000
			.saturating_add((373_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal LatestProposalId (r:1 w:0)
	// Storage: DAOPortal Proposals (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	fn update_vote(s: u32, ) -> Weight {
		(48_374_000 as Weight)
			// Standard Error: 28_000
			.saturating_add((490_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}

impl WeightInfo for () {
	// Storage: DAOPortal LatestChainIndex (r:1 w:1)
	// Storage: DAOPortal Chains (r:0 w:1)
	fn register_chain() -> Weight {
		(25_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: DAOPortal Relayer (r:0 w:1)
	fn update_relayer() -> Weight {
		(20_100_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: DAOPortal VoteFee (r:0 w:1)
	fn update_vote_fee() -> Weight {
		(19_100_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:1)
	// Storage: DAOPortal LatestChainIndex (r:1 w:0)
	// Storage: DAOPortal Chains (r:1 w:0)
	// Storage: DAOPortal Projects (r:0 w:1)
	fn add_project(workspaces: &Vec<Workspace>, ) -> Weight {
		let mut s = 0;
		workspaces.into_iter().map(|w| s += w.strategies.len());
		(55_376_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_487_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal Projects (r:1 w:1)
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: DAOPortal LatestChainIndex (r:1 w:0)
	// Storage: DAOPortal Chains (r:1 w:0)
	fn update_project_direct(workspaces: &Vec<Workspace>, ) -> Weight {
		let mut s = 0;
		workspaces.into_iter().map(|w| s += w.strategies.len());
		(66_699_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_490_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal Projects (r:1 w:1)
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: DAOPortal LatestChainIndex (r:1 w:0)
	// Storage: DAOPortal Chains (r:1 w:0)
	fn update_project_relay(workspaces: &Vec<Workspace>, ) -> Weight {
		let mut s = 0;
		workspaces.into_iter().map(|w| s += w.strategies.len());
		(66_518_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_490_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: DAOPortal VoteFee (r:1 w:0)
	// Storage: System Account (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: DAOPortal LatestProposalId (r:1 w:1)
	// Storage: DAOPortal Proposals (r:0 w:1)
	fn add_proposal_direct(s: u32, ) -> Weight {
		(53_314_000 as Weight)
			// Standard Error: 25_000
			.saturating_add((356_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(6 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: DAOPortal LatestProposalId (r:1 w:1)
	// Storage: DAOPortal Proposals (r:0 w:1)
	fn add_proposal_relay(s: u32, ) -> Weight {
		(46_949_000 as Weight)
			// Standard Error: 23_000
			.saturating_add((373_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: DAOPortal Relayer (r:1 w:0)
	// Storage: DAOPortal LatestProjectId (r:1 w:0)
	// Storage: DAOPortal LatestProposalId (r:1 w:0)
	// Storage: DAOPortal Proposals (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	fn update_vote(s: u32, ) -> Weight {
		(48_374_000 as Weight)
			// Standard Error: 28_000
			.saturating_add((490_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}